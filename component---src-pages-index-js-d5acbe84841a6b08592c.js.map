{"version":3,"sources":["webpack:///./src/styles/homeStyles.js","webpack:///./src/components/homePage/homeBanner.js","webpack:///./src/hooks/useWindowSize.js","webpack:///./src/pages/index.js"],"names":["Banner","styled","div","props","theme","background","Video","Canvas","canvas","BannerTitle","motion","h1","text","HeadLine","span","HomeBanner","windowSize","setWindowSize","onCursor","useRef","size","useState","width","window","innerWidth","height","innerHeight","useEffect","handleResize","addEventListener","removeEventListener","currentTheme","useGlobalStateContext","lastX","lastY","renderingElement","current","drawingElement","cloneNode","drawingContext","getContext","renderingContext","moving","globalCompositeOperation","fillStyle","fillRect","e","pageX","offsetLeft","pageY","offsetTop","currentX","currentY","lineJoin","moveTo","lineTo","closePath","lineWidth","stroke","drawImage","loop","autoPlay","src","require","ref","onMouseEnter","onMouseLeave","variants","initial","y","animate","transition","staggerChildren","duration","ease","IndexPage","cursorStyles","dispatch","useGlobalDispatchContext","cursorType","includes","type"],"mappings":"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","file":"component---src-pages-index-js-d5acbe84841a6b08592c.js","sourcesContent":["import styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\n// Banner\nexport const Banner = styled.div`\n    background: ${props => props.theme.background};\n    height: 100vh;\n    width: 100%;\n    position: relative;\n    margin-bottom: 296px;\n`\n\n// Video\nexport const Video = styled.div`\n    height: 100%;\n    width: 100%;\n    video {\n        object-fit: cover;\n    }\n`\n\n// Canvas\nexport const Canvas = styled.canvas`\n    position: absolute;\n    height: 100%;\n    top: 0;\n    left: 0;\n    display: block;\n`\n\n// BannerTitle\nexport const BannerTitle = styled(motion.h1)`\n    position: absolute;\n    bottom: -120px;\n    left: -18px;\n    color: ${props => props.theme.text};\n    pointer-events: none;\n`\n\n// HeadLine\nexport const HeadLine = styled(motion.span)`\n    display: block;\n    font-size: 23rem;\n    font-weight: 900;\n    line-height: .76;\n`","import React, { useEffect, useRef, componentDidMount }Â  from 'react'\n\nimport { Banner, Video, Canvas, BannerTitle, HeadLine } from \"../../styles/homeStyles\"\n\n// Custom hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Context\nimport { useGlobalStateContext } from '../../context/globalContext'\n\nconst HomeBanner = ({onCursor}) => {\n    let canvas = useRef(null);\n    let size = useWindowSize();\n    const { currentTheme } = useGlobalStateContext();\n\n    useEffect(() => {\n        let renderingElement = canvas.current;\n        let drawingElement = renderingElement.cloneNode();\n\n        let drawingContext = drawingElement.getContext('2d')\n        let renderingContext = renderingElement.getContext('2d')\n\n        let lastX;\n        let lastY;\n        let moving = false;\n\n        renderingContext.globalCompositeOperation = 'source-over';\n        renderingContext.fillStyle = currentTheme === 'dark' ? '#000000' : '#ffffff';\n        renderingContext.fillRect(0,0,size.width, size.height);\n\n        renderingElement.addEventListener('mouseover', e => {\n            moving = true;\n            lastX = e.pageX - renderingElement.offsetLeft;\n            lastY = e.pageY - renderingElement.offsetTop;\n        })\n\n        renderingElement.addEventListener('mouseup', e => {\n            moving = false;\n            lastX = e.pageX - renderingElement.offsetLeft;\n            lastY = e.pageY - renderingElement.offsetTop;\n        })\n\n        renderingElement.addEventListener('mousemove', e => {\n            if (moving) {\n                drawingContext.globalCompositeOperation = 'source-over';\n                renderingContext.globalCompositeOperation = 'destination-out';\n                let currentX = e.pageX - renderingElement.offsetLeft;\n                let currentY = e.pageY - renderingElement.offsetTop;\n                drawingContext.lineJoin = 'round';\n                drawingContext.moveTo(lastX, lastY);\n                drawingContext.lineTo(currentX, currentY);\n                drawingContext.closePath();\n                drawingContext.lineWidth = 120;\n                drawingContext.stroke();\n                lastX = currentX;\n                lastY = currentY;\n                renderingContext.drawImage(drawingElement, 0, 0);\n            }\n        }) \n    }, [currentTheme])\n\n    const parent = {\n        initial: {y: 800},\n        animate: {\n            y: 0,\n            transition: {\n                staggerChildren: .2,\n            }\n        }\n    }\n\n    const child = {\n        initial: {y: 800},\n        animate: {\n            y: 0,\n            transition: {\n                duration: 1,\n                ease: [.6, .05, -.01, .1]\n            }\n        }\n    }\n\n    return (\n        <Banner>\n            <Video>\n                <video height='100%'\n                       width='100%'\n                       loop\n                       autoPlay\n                       src={require('../../assets/video/video.mp4')}/>\n            </Video>\n            <Canvas height={size.height} width={size.width} ref={canvas} onMouseEnter={() => onCursor('hovered')} onMouseLeave={onCursor}/>\n            <BannerTitle variants={parent} initial='initial' animate='animate'>\n                <HeadLine variants={child}>DIG</HeadLine>\n                <HeadLine>DEEP</HeadLine>\n            </BannerTitle>\n        </Banner>\n    )\n}\n\nexport default HomeBanner\n","import { useState, useEffect } from 'react'\nexport default function useWindowSize() {\n\n\n    const [windowSize, setWindowSize] = useState({\n        width: window && window.innerWidth ? window.innerWidth : 1920,\n        height: window && window.innerHeight ? window.innerHeight : 1080\n    });\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n        }\n\n        window.addEventListener('resize', handleResize);\n\n        return () => { window.removeEventListener('resize', handleResize) };\n    })\n\n    return windowSize;\n}","import React from \"react\"\nimport Layout from \"../components/layout\"\n\n// Components\nimport HomeBanner from \"../components/homePage/homeBanner\"\n\n// Context\nimport { useGlobalStateContext, useGlobalDispatchContext } from '../context/globalContext'\n\nconst IndexPage = props => {\n  const { currentTheme, cursorStyles } = useGlobalStateContext(); \n  const dispatch  = useGlobalDispatchContext();\n\n  const onCursor = cursorType => {\n    cursorType = (cursorStyles.includes(cursorType) && cursorType) || false;\n    dispatch({type: 'CURSOR_TYPE', cursorType: cursorType});\n  }\n\n  return <Layout>\n            <HomeBanner onCursor={onCursor}/>\n         </Layout>\n}\n\nexport default IndexPage\n"],"sourceRoot":""}